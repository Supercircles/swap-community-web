{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDev\\\\new-swap-web\\\\reactjs-swap-web\\\\src\\\\component\\\\CoinData.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../css/CoinStats.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CoinData extends Component {\n  componentDidMount() {\n    axios.all([axios.get(\"https://explorer.xwp.one/api/networkinfo\"), axios.get(\"https://explorer.xwp.one/api/emission\"), axios.get(\"https://tradeogre.com/api/v1/ticker/BTC-XWP\"), axios.get(\"https://blockchain.info/ticker\")]).then(responseArr => {\n      this.setState({\n        hashrate: responseArr[0].data.data.hash_rate\n      });\n      this.setState({\n        difficulty: responseArr[0].data.data.difficulty\n      });\n      this.setState({\n        coinbase: responseArr[1].data.data.coinbase\n      });\n      this.setState({\n        blocknumber: responseArr[1].data.data.blk_no\n      });\n      this.setState({\n        price: responseArr[2].data.price\n      });\n      this.setState({\n        volume: responseArr[2].data.volume\n      });\n      this.setState({\n        usdVolume: responseArr[3].data.USD.last\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hashrate: \"\",\n      difficulty: \"\",\n      coinbase: \"\",\n      blocknumber: \"\",\n      price: \"\",\n      volume: \"\",\n      usdVolume: \"\"\n    };\n  }\n\n  render() {\n    const {\n      hashrate,\n      difficulty,\n      coinbase,\n      blocknumber,\n      price,\n      volume,\n      usdVolume\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns coinStats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [(hashrate / 32).toFixed(2), \" Kgps\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: Intl.NumberFormat().format(difficulty)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Circulation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [Intl.NumberFormat().format((coinbase / 1000000000000).toFixed(0)), \"XWP\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: Intl.NumberFormat().format(blocknumber)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [(price * 100000000).toFixed(0), \" Sats\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [\"$\", Intl.NumberFormat().format((volume * usdVolume).toFixed(0)), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/WebDev/new-swap-web/reactjs-swap-web/src/component/CoinData.js"],"names":["React","Component","axios","CoinData","componentDidMount","all","get","then","responseArr","setState","hashrate","data","hash_rate","difficulty","coinbase","blocknumber","blk_no","price","volume","usdVolume","USD","last","catch","error","console","log","constructor","props","state","render","toFixed","Intl","NumberFormat","format"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/CoinStats.css\";\r\n\r\nexport default class CoinData extends Component {\r\n\tcomponentDidMount() {\r\n\t\taxios\r\n\t\t\t.all([\r\n\t\t\t\taxios.get(\"https://explorer.xwp.one/api/networkinfo\"),\r\n\t\t\t\taxios.get(\"https://explorer.xwp.one/api/emission\"),\r\n\t\t\t\taxios.get(\"https://tradeogre.com/api/v1/ticker/BTC-XWP\"),\r\n\t\t\t\taxios.get(\"https://blockchain.info/ticker\"),\r\n\t\t\t])\r\n\t\t\t.then((responseArr) => {\r\n\t\t\t\tthis.setState({ hashrate: responseArr[0].data.data.hash_rate });\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdifficulty: responseArr[0].data.data.difficulty\r\n\t\t\t\t});\r\n\t\t\t\tthis.setState({ coinbase: responseArr[1].data.data.coinbase });\r\n\t\t\t\tthis.setState({ blocknumber: responseArr[1].data.data.blk_no });\r\n\t\t\t\tthis.setState({ price: responseArr[2].data.price });\r\n\t\t\t\tthis.setState({ volume: responseArr[2].data.volume });\r\n\t\t\t\tthis.setState({ usdVolume: responseArr[3].data.USD.last });\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thashrate: \"\",\r\n\t\t\tdifficulty: \"\",\r\n\t\t\tcoinbase: \"\",\r\n\t\t\tblocknumber: \"\",\r\n\t\t\tprice: \"\",\r\n\t\t\tvolume: \"\",\r\n\t\t\tusdVolume: \"\"\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\thashrate,\r\n\t\t\tdifficulty,\r\n\t\t\tcoinbase,\r\n\t\t\tblocknumber,\r\n\t\t\tprice,\r\n\t\t\tvolume,\r\n\t\t\tusdVolume\r\n\t\t} = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"columns coinStats\">\r\n\t\t\t\t<div class=\"column is-flex\"></div>\r\n\t\t\t\t<div class=\"column is-2\">\r\n\t\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t\t<div>Network</div>\r\n\t\t\t\t\t\t<div class=\"coinStatsContent\">\r\n\t\t\t\t\t\t\t{(hashrate / 32).toFixed(2)} Kgps\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t\t<div>Difficulty</div>\r\n\t\t\t\t\t\t<div class=\"coinStatsContent\">\r\n\t\t\t\t\t\t\t{Intl.NumberFormat().format(difficulty)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column is-2\">\r\n\t\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t\t<div>Circulation</div>\r\n\t\t\t\t\t\t<div class=\"coinStatsContent\">\r\n\t\t\t\t\t\t\t{Intl.NumberFormat().format(\r\n\t\t\t\t\t\t\t\t(coinbase / 1000000000000).toFixed(0)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\tXWP\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t\t<div>Block</div>\r\n\t\t\t\t\t\t<div class=\"coinStatsContent\">\r\n\t\t\t\t\t\t\t{Intl.NumberFormat().format(blocknumber)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column is-2\">\r\n\t\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t\t<div>Price</div>\r\n\t\t\t\t\t\t<div class=\"coinStatsContent\">\r\n\t\t\t\t\t\t\t{(price * 100000000).toFixed(0)} Sats\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t\t<div>Volume</div>\r\n\t\t\t\t\t\t<div class=\"coinStatsContent\">\r\n\t\t\t\t\t\t\t${Intl.NumberFormat().format(\r\n\t\t\t\t\t\t\t\t(volume * usdVolume).toFixed(0)\r\n\t\t\t\t\t\t\t)}{\" \"}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column is-flex\"></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}