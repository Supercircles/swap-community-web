{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDev\\\\new-swap-web\\\\reactjs-swap-web\\\\src\\\\component\\\\CoinData.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../css/CoinStats.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CoinData extends Component {\n  componentDidMount() {\n    axios.all([axios.get(\"https://explorer.xwp.one/api/networkinfo\"), axios.get(\"https://explorer.xwp.one/api/emission\"), axios.get(\"https://tradeogre.com/api/v1/ticker/BTC-XWP\"), axios.get(\"https://blockchain.info/ticker\")]).then(responseArr => {\n      this.setState({\n        hashrate: responseArr[0].data.data.hash_rate\n      });\n      this.setState({\n        difficulty: responseArr[0].data.data.difficulty\n      });\n      this.setState({\n        coinbase: responseArr[1].data.data.coinbase\n      });\n      this.setState({\n        blocknumber: responseArr[1].data.data.blk_no\n      });\n      this.setState({\n        price: responseArr[2].data.price\n      });\n      this.setState({\n        volume: responseArr[2].data.volume\n      });\n      this.setState({\n        usd: responseArr[3].data.USD.last\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hashrate: \"\",\n      difficulty: \"\",\n      coinbase: \"\",\n      blocknumber: \"\",\n      price: \"\",\n      volume: \"\",\n      usd: \"\"\n    };\n  }\n\n  render() {\n    const {\n      hashrate,\n      difficulty,\n      coinbase,\n      blocknumber,\n      price,\n      volume,\n      usd\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns coinStats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [(hashrate / 32).toFixed(2), \" Kgps\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: Intl.NumberFormat().format(difficulty)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Circulation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [Intl.NumberFormat().format((coinbase / 1000000000000).toFixed(0)), \"XWP\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: Intl.NumberFormat().format(blocknumber)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [(price * 100000000).toFixed(0), \" Sats\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [(volume / 1).toFixed(3) * usd.toFixed(), \" USD\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/WebDev/new-swap-web/reactjs-swap-web/src/component/CoinData.js"],"names":["React","Component","axios","CoinData","componentDidMount","all","get","then","responseArr","setState","hashrate","data","hash_rate","difficulty","coinbase","blocknumber","blk_no","price","volume","usd","USD","last","catch","error","console","log","constructor","props","state","render","toFixed","Intl","NumberFormat","format"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/CoinStats.css\";\r\n\r\nexport default class CoinData extends Component {\r\n\tcomponentDidMount() {\r\n\t\taxios.all([\r\n\t\t\taxios.get(\"https://explorer.xwp.one/api/networkinfo\"),\r\n            axios.get(\"https://explorer.xwp.one/api/emission\"),\r\n            axios.get(\"https://tradeogre.com/api/v1/ticker/BTC-XWP\"),\r\n            axios.get(\"https://blockchain.info/ticker\")\r\n            ])\r\n\t\t\t.then(responseArr => {\r\n                this.setState({ hashrate: responseArr[0].data.data.hash_rate });\r\n                this.setState({ difficulty: responseArr[0].data.data.difficulty });\r\n                this.setState({ coinbase: responseArr[1].data.data.coinbase });\r\n                this.setState({ blocknumber: responseArr[1].data.data.blk_no });\r\n                this.setState({ price: responseArr[2].data.price });\r\n                this.setState({ volume: responseArr[2].data.volume });\r\n                this.setState({ usd: responseArr[3].data.USD.last });\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thashrate: \"\",\r\n            difficulty: \"\",\r\n            coinbase: \"\",\r\n            blocknumber: \"\",\r\n            price: \"\",\r\n            volume: \"\",\r\n            usd: \"\"\r\n\t\t};\r\n\t}\r\n\trender() {\r\n        const { hashrate, difficulty, coinbase, blocknumber, price, volume, usd } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"columns coinStats\">\r\n\t\t\t\t<div class=\"column is-flex\"></div>\r\n                <div class=\"column is-2\">\r\n                    <div class=\"column\">\r\n                        <div>\r\n                            Network\r\n                        </div>\r\n                        <div class=\"coinStatsContent\">\r\n                            {(hashrate / 32).toFixed(2)} Kgps\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div>\r\n                            Difficulty\r\n                        </div>\r\n                        <div class=\"coinStatsContent\">\r\n                            {Intl.NumberFormat().format(difficulty)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column is-2\">\r\n                    <div class=\"column\">\r\n                        <div>\r\n                            Circulation\r\n                        </div>\r\n                        <div class=\"coinStatsContent\">\r\n                            {Intl.NumberFormat().format((coinbase / 1000000000000).toFixed(0))} \r\n                            XWP\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div>\r\n                            Block\r\n                        </div>\r\n                        <div class=\"coinStatsContent\"> \r\n                            {Intl.NumberFormat().format(blocknumber)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<div class=\"column is-2\">\r\n                    <div class=\"column\">\r\n                        <div>\r\n                            Price\r\n                        </div>\r\n                        <div class=\"coinStatsContent\">\r\n                        {(price * 100000000).toFixed(0)} Sats\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div>\r\n                            Volume\r\n                        </div>\r\n                        <div class=\"coinStatsContent\">\r\n                        {(volume / 1).toFixed(3)*usd.toFixed()} USD\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<div class=\"column is-flex\"></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}