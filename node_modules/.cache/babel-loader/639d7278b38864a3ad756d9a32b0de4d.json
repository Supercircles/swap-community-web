{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDev\\\\new-swap-web\\\\reactjs-swap-web\\\\src\\\\component\\\\CoinData.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../css/CoinData.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CoinData extends Component {\n  constructor(props) {\n    super(props);\n    this.interval = null;\n\n    this.getData = () => {\n      axios.all([axios.get(\"https://explorer.xwp.one/api/networkinfo\"), axios.get(\"https://explorer.xwp.one/api/emission\"), axios.get(\"https://tradeogre.com/api/v1/ticker/BTC-XWP\"), axios.get(\"https://blockchain.info/ticker\")]).then(responseArr => {\n        this.setState({\n          hashrate: responseArr[0].data.data.hash_rate\n        });\n        this.setState({\n          difficulty: responseArr[0].data.data.difficulty\n        });\n        this.setState({\n          coinbase: responseArr[1].data.data.coinbase\n        });\n        this.setState({\n          blocknumber: responseArr[1].data.data.blk_no\n        });\n        this.setState({\n          price: responseArr[2].data.price\n        });\n        this.setState({\n          priceSats: responseArr[2].data.price\n        });\n        this.setState({\n          volume: responseArr[2].data.volume\n        });\n        this.setState({\n          usdPrice: responseArr[3].data.USD.last\n        });\n        this.setState({\n          usdVolume: responseArr[3].data.USD.last\n        });\n        console.log(responseArr[4]);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      hashrate: \"\",\n      difficulty: \"\",\n      coinbase: \"\",\n      blocknumber: \"\",\n      price: \"\",\n      priceSats: \"\",\n      volume: \"\",\n      usdPrice: \"\",\n      usdVolume: \"\",\n      blockReward: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.getData, 60000);\n    this.getData();\n  }\n\n  render() {\n    const {\n      hashrate,\n      difficulty,\n      coinbase,\n      blocknumber,\n      price,\n      priceSats,\n      volume,\n      usdPrice,\n      usdVolume\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns coinStats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [(hashrate / 32).toFixed(2), \"\\xA0Kgps\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: Intl.NumberFormat().format(difficulty)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Circulation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [Intl.NumberFormat().format((coinbase / 1000000000000).toFixed(0)), \"\\xA0XWP\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: Intl.NumberFormat().format(blocknumber)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Current Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [priceSats * 100000000, \"\\xA0Sats &8644 $\", (price * usdPrice).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Daily Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [\"$\", Intl.NumberFormat().format((volume * usdVolume).toFixed(0))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/WebDev/new-swap-web/reactjs-swap-web/src/component/CoinData.js"],"names":["React","Component","axios","CoinData","constructor","props","interval","getData","all","get","then","responseArr","setState","hashrate","data","hash_rate","difficulty","coinbase","blocknumber","blk_no","price","priceSats","volume","usdPrice","USD","last","usdVolume","console","log","catch","error","state","blockReward","componentDidMount","setInterval","render","toFixed","Intl","NumberFormat","format"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/CoinData.css\";\r\n\r\nexport default class CoinData extends Component {\r\n  interval = null;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hashrate: \"\",\r\n      difficulty: \"\",\r\n      coinbase: \"\",\r\n      blocknumber: \"\",\r\n      price: \"\",\r\n      priceSats: \"\",\r\n      volume: \"\",\r\n      usdPrice: \"\",\r\n      usdVolume: \"\",\r\n      blockReward: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.getData, 60000);\r\n    this.getData();\r\n  }\r\n  getData = () => {  \r\n    axios\r\n      .all([\r\n        axios.get(\"https://explorer.xwp.one/api/networkinfo\"),\r\n        axios.get(\"https://explorer.xwp.one/api/emission\"),\r\n        axios.get(\"https://tradeogre.com/api/v1/ticker/BTC-XWP\"),\r\n        axios.get(\"https://blockchain.info/ticker\"),\r\n      ])\r\n      .then((responseArr) => {\r\n        this.setState({ hashrate: responseArr[0].data.data.hash_rate });\r\n        this.setState({\r\n          difficulty: responseArr[0].data.data.difficulty,\r\n        });\r\n        this.setState({ coinbase: responseArr[1].data.data.coinbase });\r\n        this.setState({ blocknumber: responseArr[1].data.data.blk_no });\r\n        this.setState({ price: responseArr[2].data.price });\r\n        this.setState({ priceSats: responseArr[2].data.price });\r\n        this.setState({ volume: responseArr[2].data.volume });\r\n        this.setState({ usdPrice: responseArr[3].data.USD.last });\r\n        this.setState({ usdVolume: responseArr[3].data.USD.last })\r\n        console.log(responseArr[4]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  render() {\r\n    const {\r\n      hashrate,\r\n      difficulty,\r\n      coinbase,\r\n      blocknumber,\r\n      price,\r\n      priceSats,\r\n      volume,\r\n      usdPrice,\r\n      usdVolume,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"columns coinStats\">\r\n        <div class=\"column is-flex\"></div>\r\n        <div class=\"column is-2\">\r\n          <div class=\"column\">\r\n            <div>Network</div>\r\n            <div class=\"coinStatsContent\">\r\n              {(hashrate / 32).toFixed(2)}&nbsp;Kgps\r\n            </div>\r\n          </div>\r\n          <div class=\"column\">\r\n            <div>Difficulty</div>\r\n            <div class=\"coinStatsContent\">\r\n              {Intl.NumberFormat().format(difficulty)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-2\">\r\n          <div class=\"column\">\r\n            <div>Circulation</div>\r\n            <div class=\"coinStatsContent\">\r\n              {Intl.NumberFormat().format(\r\n                (coinbase / 1000000000000).toFixed(0)\r\n              )}&nbsp;XWP\r\n            </div>\r\n          </div>\r\n          <div class=\"column\">\r\n            <div>Block</div>\r\n            <div class=\"coinStatsContent\">\r\n              {Intl.NumberFormat().format(blocknumber)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-2\">\r\n          <div class=\"column\">\r\n            <div>Current Price</div>\r\n            <div class=\"coinStatsContent\">\r\n              {priceSats * 100000000}&nbsp;Sats &8644 &#36;\r\n              {(price * usdPrice).toFixed(2)}\r\n            </div>\r\n          </div>\r\n          <div class=\"column\">\r\n            <div>Daily Volume</div>\r\n            <div class=\"coinStatsContent\">\r\n              &#36;{Intl.NumberFormat().format((volume * usdVolume).toFixed(0))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-flex\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}