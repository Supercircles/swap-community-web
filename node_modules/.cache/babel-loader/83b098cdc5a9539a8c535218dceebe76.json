{"ast":null,"code":"import React from\"react\";import $ from\"jquery\";import\"../css/CoinStats.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CoinStats(){return/*#__PURE__*/_jsxs(\"div\",{className:\"columns coinStats\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"column is-flex\"}),/*#__PURE__*/_jsx(\"div\",{id:\"networkDiv\",class:\"column is-2\"}),/*#__PURE__*/_jsx(\"div\",{id:\"networkDiv2\",class:\"column is-2\"}),/*#__PURE__*/_jsx(\"div\",{id:\"tradeogreDiv\",class:\"column is-2\"}),/*#__PURE__*/_jsx(\"div\",{class:\"column is-flex\"})]});}// Explorer Network and Difficulty\n$(document).ready(function(){// Fetch the initial table\nrefreshTable();// Fetch every 5 seconds\nsetInterval(refreshTable,24000);});function refreshTable(){var request=new XMLHttpRequest();request.open(\"GET\",\"https://explorer.xwp.one/api/networkinfo\");request.send();request.onload=function(){if(request.status===200){console.log(\"Success\");// So extract data from json and create table\n//Extracting data\nvar hashrate=JSON.parse(request.response).data.hash_rate;var difficulty=JSON.parse(request.response).data.difficulty;//Creating table\nvar network2=\"<div class=\\\"column\\\">\\n                    <div>\\n                        Network\\n                    </div>\\n                    <div class=\\\"coinStatsContent\\\">\"+(hashrate/32).toFixed(2)+\" Kgps\\n                    </div>\\n                </div>\\n                <div class=\\\"column\\\">\\n                    <div>\\n                        Difficulty\\n                    </div>\\n                    <div class=\\\"coinStatsContent\\\">\"+Intl.NumberFormat().format(difficulty)+\"\\n                    </div>\\n                </div>\";//Showing the table inside table\ndocument.getElementById(\"networkDiv\").innerHTML=network2;}};}// Explorer Stats Circulation and Block\n$(document).ready(function(){// Fetch the initial table\nrefreshTable2();// Fetch every 5 seconds\nsetInterval(refreshTable2,24000);});function refreshTable2(){var request2=new XMLHttpRequest();request2.open(\"GET\",\"https://explorer.xwp.one/api/emission\");request2.send();request2.onload=function(){if(request2.status===200){console.log(\"Success\");// So extract data from json and create table\n//Extracting data\nvar coinbase=JSON.parse(request2.response).data.coinbase;var blocknumber=JSON.parse(request2.response).data.blk_no;console.log(new Intl.NumberFormat().format(coinbase));//Creating table\nvar network3=\"<div class=\\\"column\\\">\\n                    <div>\\n                        Circulation\\n                    </div>\\n                    <div class=\\\"coinStatsContent\\\">\"+Intl.NumberFormat().format((coinbase/1000000000000).toFixed(0))+\" \\n                        XWP\\n                    </div>\\n                </div>\\n                <div class=\\\"column\\\">\\n                    <div>\\n                        Block\\n                    </div>\\n                    <div class=\\\"coinStatsContent\\\">\"+Intl.NumberFormat().format(blocknumber)+\"\\n                    </div>\\n                </div>\";//Showing the table inside table\ndocument.getElementById(\"networkDiv2\").innerHTML=network3;}};}// Explorer Network and Difficulty\n$(document).ready(function(){// Fetch the initial table\nrefreshTable3();// Fetch every 5 seconds\nsetInterval(refreshTable3,24000);});function refreshTable3(){var request=new XMLHttpRequest();request.open(\"GET\",\"https://tradeogre.com/api/v1/ticker/BTC-XWP\");request.send();request.onload=function(){if(request.status===200){console.log(\"Success\");// So extract data from json and create table\n//Extracting data\nvar price=JSON.parse(request.response).price;var volume=JSON.parse(request.response).volume;//Creating table\nvar network2=\"<div class=\\\"column\\\">\\n                    <div>\\n                        Price\\n                    </div>\\n                    <div class=\\\"coinStatsContent\\\">\\n                    \"+(price*100000000).toFixed(0)+\" Sats\\n                    </div>\\n                </div>\\n                <div class=\\\"column\\\">\\n                    <div>\\n                        Volume\\n                    </div>\\n                    <div class=\\\"coinStatsContent\\\">\\n                    \"+(volume/1).toFixed(3)+\" BTC\\n                    </div>\\n                </div>\";//Showing the table inside table\ndocument.getElementById(\"tradeogreDiv\").innerHTML=network2;}};}","map":{"version":3,"sources":["D:/WebDev/new-swap-web/reactjs-swap-web/src/component/CoinStats.js"],"names":["React","$","CoinStats","document","ready","refreshTable","setInterval","request","XMLHttpRequest","open","send","onload","status","console","log","hashrate","JSON","parse","response","data","hash_rate","difficulty","network2","toFixed","Intl","NumberFormat","format","getElementById","innerHTML","refreshTable2","request2","coinbase","blocknumber","blk_no","network3","refreshTable3","price","volume"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport \"../css/CoinStats.css\";\r\n\r\nexport default function CoinStats() {\r\n\treturn (\r\n\t\t<div className=\"columns coinStats\">\r\n            <div class=\"column is-flex\"></div>\r\n\t\t\t<div id=\"networkDiv\" class=\"column is-2\"></div>\r\n\t\t\t<div id=\"networkDiv2\" class=\"column is-2\"></div>\r\n\t\t\t<div id=\"tradeogreDiv\" class=\"column is-2\"></div>\r\n\t\t\t<div class=\"column is-flex\"></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n// Explorer Network and Difficulty\r\n$(document).ready(function () {\r\n\t// Fetch the initial table\r\n\trefreshTable();\r\n\r\n\t// Fetch every 5 seconds\r\n\tsetInterval(refreshTable, 24000);\r\n});\r\n\r\nfunction refreshTable() {\r\n\tconst request = new XMLHttpRequest();\r\n\r\n\trequest.open(\"GET\", \"https://explorer.xwp.one/api/networkinfo\");\r\n\trequest.send();\r\n\r\n\trequest.onload = () => {\r\n\t\tif (request.status === 200) {\r\n\t\t\tconsole.log(\"Success\"); // So extract data from json and create table\r\n\r\n\t\t\t//Extracting data\r\n\t\t\tvar hashrate = JSON.parse(request.response).data.hash_rate;\r\n\t\t\tvar difficulty = JSON.parse(request.response).data.difficulty;\r\n\r\n\t\t\t//Creating table\r\n\t\t\tvar network2 =\r\n\t\t\t\t`<div class=\"column\">\r\n                    <div>\r\n                        Network\r\n                    </div>\r\n                    <div class=\"coinStatsContent\">`\r\n                        + (hashrate / 32).toFixed(2) + ` Kgps\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div>\r\n                        Difficulty\r\n                    </div>\r\n                    <div class=\"coinStatsContent\">`\r\n                        + Intl.NumberFormat().format(difficulty) +`\r\n                    </div>\r\n                </div>`;\r\n\r\n\t\t\t//Showing the table inside table\r\n\t\t\tdocument.getElementById(\"networkDiv\").innerHTML = network2;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Explorer Stats Circulation and Block\r\n$(document).ready(function () {\r\n\t// Fetch the initial table\r\n\trefreshTable2();\r\n\r\n\t// Fetch every 5 seconds\r\n\tsetInterval(refreshTable2, 24000);\r\n});\r\n\r\nfunction refreshTable2() {\r\n\tconst request2 = new XMLHttpRequest();\r\n\r\n\trequest2.open(\"GET\", \"https://explorer.xwp.one/api/emission\");\r\n\trequest2.send();\r\n\r\n\trequest2.onload = () => {\r\n\t\tif (request2.status === 200) {\r\n\t\t\tconsole.log(\"Success\"); // So extract data from json and create table\r\n\r\n\t\t\t//Extracting data\r\n\t\t\tvar coinbase = JSON.parse(request2.response).data.coinbase;\r\n\t\t\tvar blocknumber = JSON.parse(request2.response).data.blk_no;\r\n\r\n\t\t\tconsole.log(new Intl.NumberFormat().format(coinbase));\r\n\r\n\t\t\t//Creating table\r\n\t\t\tvar network3 =\r\n\t\t\t\t`<div class=\"column\">\r\n                    <div>\r\n                        Circulation\r\n                    </div>\r\n                    <div class=\"coinStatsContent\">`\r\n                        + Intl.NumberFormat().format((coinbase / 1000000000000).toFixed(0)) +` \r\n                        XWP\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div>\r\n                        Block\r\n                    </div>\r\n                    <div class=\"coinStatsContent\">` \r\n                        + Intl.NumberFormat().format(blocknumber) + `\r\n                    </div>\r\n                </div>`;\r\n\r\n\t\t\t//Showing the table inside table\r\n\t\t\tdocument.getElementById(\"networkDiv2\").innerHTML = network3;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Explorer Network and Difficulty\r\n$(document).ready(function () {\r\n\t// Fetch the initial table\r\n\trefreshTable3();\r\n\r\n\t// Fetch every 5 seconds\r\n\tsetInterval(refreshTable3, 24000);\r\n});\r\n\r\nfunction refreshTable3() {\r\n\tconst request = new XMLHttpRequest();\r\n\r\n\trequest.open(\"GET\", \"https://tradeogre.com/api/v1/ticker/BTC-XWP\");\r\n\trequest.send();\r\n\r\n\trequest.onload = () => {\r\n\t\tif (request.status === 200) {\r\n\t\t\tconsole.log(\"Success\"); // So extract data from json and create table\r\n\r\n\t\t\t//Extracting data\r\n\t\t\tvar price = JSON.parse(request.response).price;\r\n\t\t\tvar volume = JSON.parse(request.response).volume;\r\n\r\n\t\t\t//Creating table\r\n\t\t\tvar network2 =\r\n\t\t\t\t`<div class=\"column\">\r\n                    <div>\r\n                        Price\r\n                    </div>\r\n                    <div class=\"coinStatsContent\">\r\n                    ` + (price * 100000000).toFixed(0) + ` Sats\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div>\r\n                        Volume\r\n                    </div>\r\n                    <div class=\"coinStatsContent\">\r\n                    ` + (volume / 1).toFixed(3) + ` BTC\r\n                    </div>\r\n                </div>`;\r\n\r\n\t\t\t//Showing the table inside table\r\n\t\t\tdocument.getElementById(\"tradeogreDiv\").innerHTML = network2;\r\n\t\t}\r\n\t};\r\n}"]},"metadata":{},"sourceType":"module"}