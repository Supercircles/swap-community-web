{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDev\\\\new-swap-web\\\\reactjs-swap-web\\\\src\\\\component\\\\CoinStats.js\";\nimport React from 'react';\nimport '../css/CoinStats.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CoinStats() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Some text Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n} // Explorer Stats\n\n_c = CoinStats;\n$(document).ready(function () {\n  // Fetch the initial table\n  refreshTable(); // Fetch every 5 seconds\n\n  setInterval(refreshTable, 24000);\n});\n\nfunction refreshTable() {\n  const request = new XMLHttpRequest();\n  request.open('GET', 'https://explorer.xwp.one/api/networkinfo');\n  request.send();\n\n  request.onload = () => {\n    if (request.status === 200) {\n      console.log(\"Success\"); // So extract data from json and create table\n      //Extracting data\n\n      var hashrate = JSON.parse(request.response).data.hash_rate;\n      var difficulty = JSON.parse(request.response).data.difficulty; //Creating table\n\n      var network2 = \"<div id='#networkdivload' class='mx-1 my-1'><i class='fas fa-tachometer-alt'></i>&ensp;Network \" + (hashrate / 32).toFixed(2) + \" Kgps</div><div class='mx-1 my-1'><i class='fas fa-unlock'></i>&ensp;Difficulty \" + Intl.NumberFormat().format(difficulty) + \"</div>\"; //Showing the table inside table\n\n      document.getElementById(\"networkdiv\").innerHTML = network2;\n    }\n  };\n} // Explorer Stats 2\n\n\n$(document).ready(function () {\n  // Fetch the initial table\n  refreshTable2(); // Fetch every 5 seconds\n\n  setInterval(refreshTable2, 24000);\n});\n\nfunction refreshTable2() {\n  const request2 = new XMLHttpRequest();\n  request2.open('GET', 'https://explorer.xwp.one/api/emission');\n  request2.send();\n\n  request2.onload = () => {\n    if (request2.status === 200) {\n      console.log(\"Success\"); // So extract data from json and create table\n      //Extracting data\n\n      var coinbase = JSON.parse(request2.response).data.coinbase;\n      var blocknumber = JSON.parse(request2.response).data.blk_no;\n      console.log(new Intl.NumberFormat().format(coinbase)); //Creating table\n\n      var network3 = \"<div class='mx-1 my-1'><i class='fas fa-layer-group'></i>&ensp;Circulation \" + Intl.NumberFormat().format((coinbase / 1000000000000).toFixed(0)) + \" XWP</div><div class='mx-1 my-1'><i class='fas fa-cubes'></i>&ensp;Block \" + Intl.NumberFormat().format(blocknumber) + \"</div>\"; //Showing the table inside table\n\n      document.getElementById(\"networkdiv2\").innerHTML = network3;\n    }\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinStats\");","map":{"version":3,"sources":["D:/WebDev/new-swap-web/reactjs-swap-web/src/component/CoinStats.js"],"names":["React","CoinStats","$","document","ready","refreshTable","setInterval","request","XMLHttpRequest","open","send","onload","status","console","log","hashrate","JSON","parse","response","data","hash_rate","difficulty","network2","toFixed","Intl","NumberFormat","format","getElementById","innerHTML","refreshTable2","request2","coinbase","blocknumber","blk_no","network3"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../css/CoinStats.css';\r\n\r\n\r\nexport default function CoinStats() {\r\n    return (\r\n        <div>\r\n            <p>\r\n                Some text Here\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Explorer Stats\r\n$(document).ready(function() {\r\n    // Fetch the initial table\r\n    refreshTable();\r\n\r\n    // Fetch every 5 seconds\r\n    setInterval(refreshTable, 24000);\r\n});\r\n\r\nfunction refreshTable(){\r\nconst request = new XMLHttpRequest();\r\n \r\nrequest.open('GET', 'https://explorer.xwp.one/api/networkinfo');\r\nrequest.send(); \r\n \r\nrequest.onload = () => {\r\n  if (request.status === 200) {\r\n    console.log(\"Success\"); // So extract data from json and create table\r\n    \r\n    //Extracting data\r\n    var hashrate = JSON.parse(request.response).data.hash_rate;\r\n    var difficulty = JSON.parse(request.response).data.difficulty;\r\n    \r\n    //Creating table\r\n    var network2=\r\n    \"<div id='#networkdivload' class='mx-1 my-1'><i class='fas fa-tachometer-alt'></i>&ensp;Network \"+(hashrate/32).toFixed(2)+\r\n    \" Kgps</div><div class='mx-1 my-1'><i class='fas fa-unlock'></i>&ensp;Difficulty \"+Intl.NumberFormat().format(difficulty)+\"</div>\";\r\n \r\n    //Showing the table inside table\r\n    document.getElementById(\"networkdiv\").innerHTML = network2;   \r\n  } \r\n   \r\n};\r\n \r\n}\r\n\r\n// Explorer Stats 2\r\n$(document).ready(function() {\r\n  // Fetch the initial table\r\n  refreshTable2();\r\n\r\n  // Fetch every 5 seconds\r\n  setInterval(refreshTable2, 24000);\r\n});\r\n\r\nfunction refreshTable2(){\r\nconst request2 = new XMLHttpRequest();\r\n \r\nrequest2.open('GET', 'https://explorer.xwp.one/api/emission');\r\nrequest2.send(); \r\n \r\nrequest2.onload = () => {\r\n  if (request2.status === 200) {\r\n    console.log(\"Success\"); // So extract data from json and create table\r\n    \r\n    //Extracting data\r\n    var coinbase = JSON.parse(request2.response).data.coinbase;\r\n    var blocknumber = JSON.parse(request2.response).data.blk_no;\r\n    \r\n    console.log(new Intl.NumberFormat().format(coinbase));\r\n    \r\n    //Creating table\r\n    var network3=\r\n    \"<div class='mx-1 my-1'><i class='fas fa-layer-group'></i>&ensp;Circulation \"+Intl.NumberFormat().format((coinbase/1000000000000).toFixed(0))+\r\n    \" XWP</div><div class='mx-1 my-1'><i class='fas fa-cubes'></i>&ensp;Block \"+Intl.NumberFormat().format(blocknumber)+\"</div>\";\r\n \r\n    //Showing the table inside table\r\n    document.getElementById(\"networkdiv2\").innerHTML = network3;   \r\n  } \r\n   \r\n};\r\n \r\n}"]},"metadata":{},"sourceType":"module"}