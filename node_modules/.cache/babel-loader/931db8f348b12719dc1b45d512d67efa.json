{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDev\\\\new-swap-web\\\\reactjs-swap-web\\\\src\\\\component\\\\CoinData.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../css/CoinData.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CoinData extends Component {\n  constructor(props) {\n    super(props);\n    var today = new Date(),\n        date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n    this.state = {\n      hashrate: \"\",\n      difficulty: \"\",\n      coinbase: \"\",\n      blocknumber: \"\",\n      price: \"\",\n      priceSats: \"\",\n      volume: \"\",\n      usdPrice: \"\",\n      usdVolume: \"\",\n      blockReward: \"\",\n      currentDate: date\n    };\n  }\n\n  componentDidMount() {\n    axios.all([axios.get(\"https://explorer.xwp.one/api/networkinfo\"), axios.get(\"https://explorer.xwp.one/api/emission\"), axios.get(\"https://tradeogre.com/api/v1/ticker/BTC-XWP\"), axios.get(\"https://blockchain.info/ticker\"), axios.get(\"https://www.cryptunit.com/api/history/89\")]).then(responseArr => {\n      this.setState({\n        hashrate: responseArr[0].data.data.hash_rate\n      });\n      this.setState({\n        difficulty: responseArr[0].data.data.difficulty\n      });\n      this.setState({\n        coinbase: responseArr[1].data.data.coinbase\n      });\n      this.setState({\n        blocknumber: responseArr[1].data.data.blk_no\n      });\n      this.setState({\n        price: responseArr[2].data.price\n      });\n      this.setState({\n        priceSats: responseArr[2].data.price\n      });\n      this.setState({\n        volume: responseArr[2].data.volume\n      });\n      this.setState({\n        usdPrice: responseArr[3].data.USD.last\n      });\n      this.setState({\n        usdVolume: responseArr[3].data.USD.last\n      });\n      this.setState({\n        blockReward: responseArr[4].data.history.currentDate.reward\n      });\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      hashrate,\n      difficulty,\n      coinbase,\n      blocknumber,\n      price,\n      priceSats,\n      volume,\n      usdPrice,\n      usdVolume,\n      blockReward\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns coinStats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [(hashrate / 32).toFixed(2), \" Kgps\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: Intl.NumberFormat().format(difficulty)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Circulation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [Intl.NumberFormat().format((coinbase / 1000000000000).toFixed(0)), \" \", \"XWP\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [Intl.NumberFormat().format(blocknumber), \" / \", blockReward]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Current Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [priceSats * 100000000, \"\\xA0Sats | $\", (price * usdPrice).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Daily Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"coinStatsContent\",\n            children: [\"$\", Intl.NumberFormat().format((volume * usdVolume).toFixed(0))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/WebDev/new-swap-web/reactjs-swap-web/src/component/CoinData.js"],"names":["React","Component","axios","CoinData","constructor","props","today","Date","date","getFullYear","getMonth","getDate","state","hashrate","difficulty","coinbase","blocknumber","price","priceSats","volume","usdPrice","usdVolume","blockReward","currentDate","componentDidMount","all","get","then","responseArr","setState","data","hash_rate","blk_no","USD","last","history","reward","console","log","response","catch","error","render","toFixed","Intl","NumberFormat","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC9CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,QAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AAAA,QACEC,IAAI,GACFF,KAAK,CAACG,WAAN,KACA,GADA,IAECH,KAAK,CAACI,QAAN,KAAmB,CAFpB,IAGA,GAHA,GAIAJ,KAAK,CAACK,OAAN,EANJ;AAOA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,WAAW,EAAE,EAJF;AAKXC,MAAAA,KAAK,EAAE,EALI;AAMXC,MAAAA,SAAS,EAAE,EANA;AAOXC,MAAAA,MAAM,EAAE,EAPG;AAQXC,MAAAA,QAAQ,EAAE,EARC;AASXC,MAAAA,SAAS,EAAE,EATA;AAUXC,MAAAA,WAAW,EAAE,EAVF;AAWXC,MAAAA,WAAW,EAAEf;AAXF,KAAb;AAaD;;AACDgB,EAAAA,iBAAiB,GAAG;AAClBtB,IAAAA,KAAK,CACFuB,GADH,CACO,CACHvB,KAAK,CAACwB,GAAN,CAAU,0CAAV,CADG,EAEHxB,KAAK,CAACwB,GAAN,CAAU,uCAAV,CAFG,EAGHxB,KAAK,CAACwB,GAAN,CAAU,6CAAV,CAHG,EAIHxB,KAAK,CAACwB,GAAN,CAAU,gCAAV,CAJG,EAKHxB,KAAK,CAACwB,GAAN,CAAU,0CAAV,CALG,CADP,EAQGC,IARH,CAQSC,WAAD,IAAiB;AACrB,WAAKC,QAAL,CAAc;AAAEhB,QAAAA,QAAQ,EAAEe,WAAW,CAAC,CAAD,CAAX,CAAeE,IAAf,CAAoBA,IAApB,CAAyBC;AAArC,OAAd;AACA,WAAKF,QAAL,CAAc;AACZf,QAAAA,UAAU,EAAEc,WAAW,CAAC,CAAD,CAAX,CAAeE,IAAf,CAAoBA,IAApB,CAAyBhB;AADzB,OAAd;AAGA,WAAKe,QAAL,CAAc;AAAEd,QAAAA,QAAQ,EAAEa,WAAW,CAAC,CAAD,CAAX,CAAeE,IAAf,CAAoBA,IAApB,CAAyBf;AAArC,OAAd;AACA,WAAKc,QAAL,CAAc;AAAEb,QAAAA,WAAW,EAAEY,WAAW,CAAC,CAAD,CAAX,CAAeE,IAAf,CAAoBA,IAApB,CAAyBE;AAAxC,OAAd;AACA,WAAKH,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAEW,WAAW,CAAC,CAAD,CAAX,CAAeE,IAAf,CAAoBb;AAA7B,OAAd;AACA,WAAKY,QAAL,CAAc;AAAEX,QAAAA,SAAS,EAAEU,WAAW,CAAC,CAAD,CAAX,CAAeE,IAAf,CAAoBb;AAAjC,OAAd;AACA,WAAKY,QAAL,CAAc;AAAEV,QAAAA,MAAM,EAAES,WAAW,CAAC,CAAD,CAAX,CAAeE,IAAf,CAAoBX;AAA9B,OAAd;AACA,WAAKU,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEQ,WAAW,CAAC,CAAD,CAAX,CAAeE,IAAf,CAAoBG,GAApB,CAAwBC;AAApC,OAAd;AACA,WAAKL,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAEO,WAAW,CAAC,CAAD,CAAX,CAAeE,IAAf,CAAoBG,GAApB,CAAwBC;AAArC,OAAd;AACA,WAAKL,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEM,WAAW,CAAC,CAAD,CAAX,CAAeE,IAAf,CAAoBK,OAApB,CAA4BZ,WAA5B,CAAwCa;AAAvD,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACT,IAArB;AACD,KAtBH,EAuBGU,KAvBH,CAuBUC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KAzBH;AA0BD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJ7B,MAAAA,QADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,WAJI;AAKJC,MAAAA,KALI;AAMJC,MAAAA,SANI;AAOJC,MAAAA,MAPI;AAQJC,MAAAA,QARI;AASJC,MAAAA,SATI;AAUJC,MAAAA;AAVI,QAWF,KAAKV,KAXT;AAYA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,KAAK,EAAC,kBAAX;AAAA,uBACG,CAACC,QAAQ,GAAG,EAAZ,EAAgB8B,OAAhB,CAAwB,CAAxB,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,KAAK,EAAC,kBAAX;AAAA,sBACGC,IAAI,CAACC,YAAL,GAAoBC,MAApB,CAA2BhC,UAA3B;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAgBE;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,KAAK,EAAC,kBAAX;AAAA,uBACG8B,IAAI,CAACC,YAAL,GAAoBC,MAApB,CACC,CAAC/B,QAAQ,GAAG,aAAZ,EAA2B4B,OAA3B,CAAmC,CAAnC,CADD,CADH,EAGK,GAHL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,KAAK,EAAC,kBAAX;AAAA,uBACGC,IAAI,CAACC,YAAL,GAAoBC,MAApB,CAA2B9B,WAA3B,CADH,SAC+CM,WAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiCE;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,KAAK,EAAC,kBAAX;AAAA,uBACGJ,SAAS,GAAG,SADf,kBAEG,CAACD,KAAK,GAAGG,QAAT,EAAmBuB,OAAnB,CAA2B,CAA3B,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,KAAK,EAAC,kBAAX;AAAA,4BACIC,IAAI,CAACC,YAAL,GAAoBC,MAApB,CAA2B,CAAC3B,MAAM,GAAGE,SAAV,EAAqBsB,OAArB,CAA6B,CAA7B,CAA3B,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF,eAgDE;AAAK,QAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAhDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoDD;;AArH6C","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/CoinData.css\";\r\n\r\nexport default class CoinData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var today = new Date(),\r\n      date =\r\n        today.getFullYear() +\r\n        \"-\" +\r\n        (today.getMonth() + 1) +\r\n        \"-\" +\r\n        today.getDate();\r\n    this.state = {\r\n      hashrate: \"\",\r\n      difficulty: \"\",\r\n      coinbase: \"\",\r\n      blocknumber: \"\",\r\n      price: \"\",\r\n      priceSats: \"\",\r\n      volume: \"\",\r\n      usdPrice: \"\",\r\n      usdVolume: \"\",\r\n      blockReward: \"\",\r\n      currentDate: date,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .all([\r\n        axios.get(\"https://explorer.xwp.one/api/networkinfo\"),\r\n        axios.get(\"https://explorer.xwp.one/api/emission\"),\r\n        axios.get(\"https://tradeogre.com/api/v1/ticker/BTC-XWP\"),\r\n        axios.get(\"https://blockchain.info/ticker\"),\r\n        axios.get(\"https://www.cryptunit.com/api/history/89\"),\r\n      ])\r\n      .then((responseArr) => {\r\n        this.setState({ hashrate: responseArr[0].data.data.hash_rate });\r\n        this.setState({\r\n          difficulty: responseArr[0].data.data.difficulty,\r\n        });\r\n        this.setState({ coinbase: responseArr[1].data.data.coinbase });\r\n        this.setState({ blocknumber: responseArr[1].data.data.blk_no });\r\n        this.setState({ price: responseArr[2].data.price });\r\n        this.setState({ priceSats: responseArr[2].data.price });\r\n        this.setState({ volume: responseArr[2].data.volume });\r\n        this.setState({ usdPrice: responseArr[3].data.USD.last });\r\n        this.setState({ usdVolume: responseArr[3].data.USD.last });\r\n        this.setState({ blockReward: responseArr[4].data.history.currentDate.reward });\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  render() {\r\n    const {\r\n      hashrate,\r\n      difficulty,\r\n      coinbase,\r\n      blocknumber,\r\n      price,\r\n      priceSats,\r\n      volume,\r\n      usdPrice,\r\n      usdVolume,\r\n      blockReward,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"columns coinStats\">\r\n        <div class=\"column is-flex\"></div>\r\n        <div class=\"column is-2\">\r\n          <div class=\"column\">\r\n            <div>Network</div>\r\n            <div class=\"coinStatsContent\">\r\n              {(hashrate / 32).toFixed(2)} Kgps\r\n            </div>\r\n          </div>\r\n          <div class=\"column\">\r\n            <div>Difficulty</div>\r\n            <div class=\"coinStatsContent\">\r\n              {Intl.NumberFormat().format(difficulty)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-2\">\r\n          <div class=\"column\">\r\n            <div>Circulation</div>\r\n            <div class=\"coinStatsContent\">\r\n              {Intl.NumberFormat().format(\r\n                (coinbase / 1000000000000).toFixed(0)\r\n              )}{\" \"}\r\n              XWP\r\n            </div>\r\n          </div>\r\n          <div class=\"column\">\r\n            <div>Block</div>\r\n            <div class=\"coinStatsContent\">\r\n              {Intl.NumberFormat().format(blocknumber)} / {blockReward}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-2\">\r\n          <div class=\"column\">\r\n            <div>Current Price</div>\r\n            <div class=\"coinStatsContent\">\r\n              {priceSats * 100000000}&nbsp;Sats | $\r\n              {(price * usdPrice).toFixed(2)}\r\n            </div>\r\n          </div>\r\n          <div class=\"column\">\r\n            <div>Daily Volume</div>\r\n            <div class=\"coinStatsContent\">\r\n              ${Intl.NumberFormat().format((volume * usdVolume).toFixed(0))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-flex\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}