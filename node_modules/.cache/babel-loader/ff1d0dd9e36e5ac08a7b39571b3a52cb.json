{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDev\\\\new-swap-web\\\\reactjs-swap-web\\\\src\\\\component\\\\CoinStats.js\";\nimport React from \"react\";\nimport $ from \"jquery\";\nimport \"../css/CoinStats.css\"; // Explorer Stats\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n$(document).ready(function () {\n  // Fetch the initial table\n  refreshTable(); // Fetch every 5 seconds\n\n  setInterval(refreshTable, 24000);\n});\n\nfunction refreshTable() {\n  const request = new XMLHttpRequest();\n  request.open(\"GET\", \"https://explorer.xwp.one/api/networkinfo\");\n  request.send();\n\n  request.onload = () => {\n    if (request.status === 200) {\n      console.log(\"Success\"); // So extract data from json and create table\n      //Extracting data\n\n      var hashrate = JSON.parse(request.response).data.hash_rate;\n      var difficulty = JSON.parse(request.response).data.difficulty; //Creating table\n\n      const network2 = (hashrate / 32).toFixed(2);\n      const network3 = Intl.NumberFormat().format(difficulty);\n    }\n  };\n}\n\nexport default function CoinStats() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: network2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n_c = CoinStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinStats\");","map":{"version":3,"sources":["D:/WebDev/new-swap-web/reactjs-swap-web/src/component/CoinStats.js"],"names":["React","$","document","ready","refreshTable","setInterval","request","XMLHttpRequest","open","send","onload","status","console","log","hashrate","JSON","parse","response","data","hash_rate","difficulty","network2","toFixed","network3","Intl","NumberFormat","format","CoinStats"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,sBAAP,C,CAEA;;;AACAA,CAAC,CAACC,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAY;AAC7B;AACAC,EAAAA,YAAY,GAFiB,CAI7B;;AACAC,EAAAA,WAAW,CAACD,YAAD,EAAe,KAAf,CAAX;AACA,CAND;;AAQA,SAASA,YAAT,GAAwB;AACvB,QAAME,OAAO,GAAG,IAAIC,cAAJ,EAAhB;AAEAD,EAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,0CAApB;AACAF,EAAAA,OAAO,CAACG,IAAR;;AAEAH,EAAAA,OAAO,CAACI,MAAR,GAAiB,MAAM;AACtB,QAAIJ,OAAO,CAACK,MAAR,KAAmB,GAAvB,EAA4B;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAD2B,CACH;AAExB;;AACA,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWV,OAAO,CAACW,QAAnB,EAA6BC,IAA7B,CAAkCC,SAAjD;AACA,UAAIC,UAAU,GAAGL,IAAI,CAACC,KAAL,CAAWV,OAAO,CAACW,QAAnB,EAA6BC,IAA7B,CAAkCE,UAAnD,CAL2B,CAO3B;;AACA,YAAMC,QAAQ,GAAG,CAACP,QAAQ,GAAG,EAAZ,EAAgBQ,OAAhB,CAAwB,CAAxB,CAAjB;AACS,YAAMC,QAAQ,GAAGC,IAAI,CAACC,YAAL,GAAoBC,MAApB,CAA2BN,UAA3B,CAAjB;AACT;AACD,GAZD;AAaA;;AAED,eAAe,SAASO,SAAT,GAAqB;AACnC,sBACC;AAAA,4BACC;AAAA,gBAAON;AAAP;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;KARuBM,S","sourcesContent":["import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport \"../css/CoinStats.css\";\r\n\r\n// Explorer Stats\r\n$(document).ready(function () {\r\n\t// Fetch the initial table\r\n\trefreshTable();\r\n\r\n\t// Fetch every 5 seconds\r\n\tsetInterval(refreshTable, 24000);\r\n});\r\n\r\nfunction refreshTable() {\r\n\tconst request = new XMLHttpRequest();\r\n\r\n\trequest.open(\"GET\", \"https://explorer.xwp.one/api/networkinfo\");\r\n\trequest.send();\r\n\r\n\trequest.onload = () => {\r\n\t\tif (request.status === 200) {\r\n\t\t\tconsole.log(\"Success\"); // So extract data from json and create table\r\n\r\n\t\t\t//Extracting data\r\n\t\t\tvar hashrate = JSON.parse(request.response).data.hash_rate;\r\n\t\t\tvar difficulty = JSON.parse(request.response).data.difficulty;\r\n\r\n\t\t\t//Creating table\r\n\t\t\tconst network2 = (hashrate / 32).toFixed(2);\r\n            const network3 = Intl.NumberFormat().format(difficulty);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport default function CoinStats() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>{ network2 }</div>\r\n\t\t\t<div></div>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}